{"version":3,"sources":["script.js"],"names":["gridSize","boxes","shuffle","array","i","length","j","Math","floor","random","createBoxes","Array","from","_","renderBoxes","container","document","getElementById","innerHTML","forEach","num","idx","box","createElement","classList","add","textContent","addEventListener","moveBox","appendChild","emptyIdx","indexOf","validMoves","includes","isAdjacent","isSolved","setTimeout","alert","idx1","idx2","row1","col1","row2","col2","abs","window","onload"],"mappings":"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","sourcesContent":["// Box Puzzle Game (Sliding Puzzle)\r\nconst gridSize = 4;\r\nlet boxes = [];\r\n\r\nfunction shuffle(array) {\r\n\tfor (let i = array.length - 1; i > 0; i--) {\r\n\t\tconst j = Math.floor(Math.random() * (i + 1));\r\n\t\t[array[i], array[j]] = [array[j], array[i]];\r\n\t}\r\n\treturn array;\r\n}\r\n\r\nfunction createBoxes() {\r\n\tboxes = Array.from({ length: gridSize * gridSize }, (_, i) => i);\r\n\t// Leave last box empty\r\n\tboxes = shuffle(boxes);\r\n\trenderBoxes();\r\n}\r\n\r\nfunction renderBoxes() {\r\n\tconst container = document.getElementById('game-container');\r\n\tcontainer.innerHTML = '';\r\n\tboxes.forEach((num, idx) => {\r\n\t\tconst box = document.createElement('div');\r\n\t\tbox.classList.add('box');\r\n\t\tif (num === 0) {\r\n\t\t\tbox.classList.add('empty');\r\n\t\t\tbox.textContent = '';\r\n\t\t} else {\r\n\t\t\tbox.textContent = num;\r\n\t\t\tbox.addEventListener('click', () => moveBox(idx));\r\n\t\t}\r\n\t\tcontainer.appendChild(box);\r\n\t});\r\n}\r\n\r\nfunction moveBox(idx) {\r\n\tconst emptyIdx = boxes.indexOf(0);\r\n\tconst validMoves = [\r\n\t\temptyIdx - 1,\r\n\t\temptyIdx + 1,\r\n\t\temptyIdx - gridSize,\r\n\t\temptyIdx + gridSize\r\n\t];\r\n\t// Check if clicked box is adjacent to empty\r\n\tif (validMoves.includes(idx) && isAdjacent(idx, emptyIdx)) {\r\n\t\t[boxes[idx], boxes[emptyIdx]] = [boxes[emptyIdx], boxes[idx]];\r\n\t\trenderBoxes();\r\n\t\tif (isSolved()) {\r\n\t\t\tsetTimeout(() => alert('Congratulations! Puzzle solved!'), 100);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction isAdjacent(idx1, idx2) {\r\n\tconst row1 = Math.floor(idx1 / gridSize);\r\n\tconst col1 = idx1 % gridSize;\r\n\tconst row2 = Math.floor(idx2 / gridSize);\r\n\tconst col2 = idx2 % gridSize;\r\n\treturn (\r\n\t\t(row1 === row2 && Math.abs(col1 - col2) === 1) ||\r\n\t\t(col1 === col2 && Math.abs(row1 - row2) === 1)\r\n\t);\r\n}\r\n\r\nfunction isSolved() {\r\n\tfor (let i = 0; i < boxes.length - 1; i++) {\r\n\t\tif (boxes[i] !== i + 1) return false;\r\n\t}\r\n\treturn boxes[boxes.length - 1] === 0;\r\n}\r\n\r\ndocument.getElementById('reset-btn').addEventListener('click', createBoxes);\r\nwindow.onload = createBoxes;\r\n"],"file":"script.dev.js"}