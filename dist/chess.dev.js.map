{"version":3,"sources":["chess.js"],"names":["PIECE_MODELS","wK","wQ","wR","wB","wN","wP","bK","bQ","bR","bB","bN","bP","PIECES","board","selected","turn","mode","gameOver","initialBoard","renderBoard","boardDiv","document","getElementById","innerHTML","r","c","sq","createElement","className","dataset","row","col","classList","add","piece","textContent","onclick","handleSquareClick","appendChild","isValidMove","movePiece","setTimeout","aiMove","from","to","isCheckmate","opposite","t","color","target","dr","dc","dir","Math","abs","stepR","stepC","i","step","king","pieceValues","K","Q","R","B","N","P","moves","score","original","safe","rr","cc","opp","push","length","sort","a","b","best","setMode","m","resetGame"],"mappings":"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","sourcesContent":["// Chess game logic\r\n// 3D model filenames for each piece (for use with Three.js or similar)\r\nconst PIECE_MODELS = {\r\n    wK: 'models/wK.glb', wQ: 'models/wQ.glb', wR: 'models/wR.glb', wB: 'models/wB.glb', wN: 'models/wN.glb', wP: 'models/wP.glb',\r\n    bK: 'models/bK.glb', bQ: 'models/bQ.glb', bR: 'models/bR.glb', bB: 'models/bB.glb', bN: 'models/bN.glb', bP: 'models/bP.glb'\r\n};\r\nconst PIECES = {\r\n    wK: '♔', wQ: '♕', wR: '♖', wB: '♗', wN: '♘', wP: '♙',\r\n    bK: '♚', bQ: '♛', bR: '♜', bB: '♝', bN: '♞', bP: '♟'\r\n};\r\n\r\nlet board, selected, turn, mode, gameOver;\r\n\r\nfunction initialBoard() {\r\n    return [\r\n        ['bR','bN','bB','bQ','bK','bB','bN','bR'],\r\n        ['bP','bP','bP','bP','bP','bP','bP','bP'],\r\n        [null,null,null,null,null,null,null,null],\r\n        [null,null,null,null,null,null,null,null],\r\n        [null,null,null,null,null,null,null,null],\r\n        [null,null,null,null,null,null,null,null],\r\n        ['wP','wP','wP','wP','wP','wP','wP','wP'],\r\n        ['wR','wN','wB','wQ','wK','wB','wN','wR']\r\n    ];\r\n}\r\n\r\nfunction renderBoard() {\r\n    const boardDiv = document.getElementById('chessboard');\r\n    boardDiv.innerHTML = '';\r\n    for (let r = 0; r < 8; r++) {\r\n        for (let c = 0; c < 8; c++) {\r\n            const sq = document.createElement('div');\r\n            sq.className = 'square ' + ((r+c)%2 ? 'dark' : 'light');\r\n            sq.dataset.row = r;\r\n            sq.dataset.col = c;\r\n            if (selected && selected[0] === r && selected[1] === c) sq.classList.add('selected');\r\n            const piece = board[r][c];\r\n            if (piece) sq.textContent = PIECES[piece];\r\n            sq.onclick = () => handleSquareClick(r, c);\r\n            boardDiv.appendChild(sq);\r\n        }\r\n    }\r\n    document.getElementById('turn-indicator').textContent = gameOver ? 'Game Over' : (turn === 'w' ? 'White' : 'Black') + \"'s turn\";\r\n}\r\n\r\nfunction handleSquareClick(r, c) {\r\n    if (gameOver) return;\r\n    const piece = board[r][c];\r\n    if (selected) {\r\n        if (selected[0] === r && selected[1] === c) {\r\n            selected = null;\r\n            renderBoard();\r\n            return;\r\n        }\r\n        if (isValidMove(selected, [r, c], turn)) {\r\n            movePiece(selected, [r, c]);\r\n            selected = null;\r\n            renderBoard();\r\n            if (mode === 'ai' && turn === 'b' && !gameOver) setTimeout(aiMove, 500);\r\n        } else {\r\n            selected = null;\r\n            renderBoard();\r\n        }\r\n    } else if (piece && piece[0] === turn) {\r\n        selected = [r, c];\r\n        renderBoard();\r\n    }\r\n}\r\n\r\nfunction movePiece(from, to) {\r\n    board[to[0]][to[1]] = board[from[0]][from[1]];\r\n    board[from[0]][from[1]] = null;\r\n    if (isCheckmate(opposite(turn))) {\r\n        gameOver = true;\r\n        document.getElementById('turn-indicator').textContent = (turn === 'w' ? 'White' : 'Black') + ' wins!';\r\n    } else {\r\n        turn = opposite(turn);\r\n    }\r\n}\r\n\r\nfunction opposite(t) { return t === 'w' ? 'b' : 'w'; }\r\n\r\nfunction isValidMove(from, to, color) {\r\n    // Full chess move validation\r\n    const piece = board[from[0]][from[1]];\r\n    if (!piece || piece[0] !== color) return false;\r\n    if (from[0] === to[0] && from[1] === to[1]) return false;\r\n    const target = board[to[0]][to[1]];\r\n    if (target && target[0] === color) return false;\r\n    const dr = to[0] - from[0];\r\n    const dc = to[1] - from[1];\r\n    // Board boundaries\r\n    if (to[0] < 0 || to[0] > 7 || to[1] < 0 || to[1] > 7) return false;\r\n    // Pawn\r\n    if (piece[1] === 'P') {\r\n        const dir = color === 'w' ? -1 : 1;\r\n        // Move forward\r\n        if (dc === 0 && dr === dir && !target) return true;\r\n        // First move: two squares\r\n        if (dc === 0 && dr === 2 * dir && !target && ((color === 'w' && from[0] === 6) || (color === 'b' && from[0] === 1)) && !board[from[0] + dir][from[1]]) return true;\r\n        // Capture\r\n        if (Math.abs(dc) === 1 && dr === dir && target && target[0] !== color) return true;\r\n        // TODO: En passant\r\n        return false;\r\n    }\r\n    // Knight\r\n    if (piece[1] === 'N') {\r\n        if ((Math.abs(dr) === 2 && Math.abs(dc) === 1) || (Math.abs(dr) === 1 && Math.abs(dc) === 2)) return true;\r\n        return false;\r\n    }\r\n    // Bishop\r\n    if (piece[1] === 'B') {\r\n        if (Math.abs(dr) !== Math.abs(dc)) return false;\r\n        let stepR = dr > 0 ? 1 : -1;\r\n        let stepC = dc > 0 ? 1 : -1;\r\n        for (let i = 1; i < Math.abs(dr); i++) {\r\n            if (board[from[0] + i * stepR][from[1] + i * stepC]) return false;\r\n        }\r\n        return true;\r\n    }\r\n    // Rook\r\n    if (piece[1] === 'R') {\r\n        if (dr !== 0 && dc !== 0) return false;\r\n        if (dr === 0) {\r\n            let step = dc > 0 ? 1 : -1;\r\n            for (let i = 1; i < Math.abs(dc); i++) {\r\n                if (board[from[0]][from[1] + i * step]) return false;\r\n            }\r\n        } else {\r\n            let step = dr > 0 ? 1 : -1;\r\n            for (let i = 1; i < Math.abs(dr); i++) {\r\n                if (board[from[0] + i * step][from[1]]) return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    // Queen\r\n    if (piece[1] === 'Q') {\r\n        if (Math.abs(dr) === Math.abs(dc)) {\r\n            let stepR = dr > 0 ? 1 : -1;\r\n            let stepC = dc > 0 ? 1 : -1;\r\n            for (let i = 1; i < Math.abs(dr); i++) {\r\n                if (board[from[0] + i * stepR][from[1] + i * stepC]) return false;\r\n            }\r\n            return true;\r\n        } else if (dr === 0 || dc === 0) {\r\n            if (dr === 0) {\r\n                let step = dc > 0 ? 1 : -1;\r\n                for (let i = 1; i < Math.abs(dc); i++) {\r\n                    if (board[from[0]][from[1] + i * step]) return false;\r\n                }\r\n            } else {\r\n                let step = dr > 0 ? 1 : -1;\r\n                for (let i = 1; i < Math.abs(dr); i++) {\r\n                    if (board[from[0] + i * step][from[1]]) return false;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    // King\r\n    if (piece[1] === 'K') {\r\n        if (Math.abs(dr) <= 1 && Math.abs(dc) <= 1) return true;\r\n        // TODO: Castling\r\n        return false;\r\n    }\r\n    return false;\r\n}\r\n\r\nfunction isCheckmate(color) {\r\n    // Demo: check if king is captured\r\n    let king = color + 'K';\r\n    for (let r = 0; r < 8; r++) for (let c = 0; c < 8; c++) if (board[r][c] === king) return false;\r\n    return true;\r\n}\r\n\r\nfunction aiMove() {\r\n    // Smarter AI: pick the best move based on material gain and safety\r\n    const pieceValues = { K: 1000, Q: 9, R: 5, B: 3, N: 3, P: 1 };\r\n    let moves = [];\r\n    for (let r = 0; r < 8; r++) {\r\n        for (let c = 0; c < 8; c++) {\r\n            const piece = board[r][c];\r\n            if (piece && piece[0] === 'b') {\r\n                for (let dr = 0; dr < 8; dr++) {\r\n                    for (let dc = 0; dc < 8; dc++) {\r\n                        if (isValidMove([r, c], [dr, dc], 'b')) {\r\n                            let score = 0;\r\n                            const target = board[dr][dc];\r\n                            if (target && target[0] === 'w') {\r\n                                score += pieceValues[target[1]] || 0;\r\n                            }\r\n                            // Simulate move and check if piece is immediately capturable\r\n                            const original = board[dr][dc];\r\n                            board[dr][dc] = piece;\r\n                            board[r][c] = null;\r\n                            let safe = true;\r\n                            for (let rr = 0; rr < 8; rr++) {\r\n                                for (let cc = 0; cc < 8; cc++) {\r\n                                    const opp = board[rr][cc];\r\n                                    if (opp && opp[0] === 'w' && isValidMove([rr, cc], [dr, dc], 'w')) {\r\n                                        safe = false;\r\n                                        break;\r\n                                    }\r\n                                }\r\n                                if (!safe) break;\r\n                            }\r\n                            board[r][c] = piece;\r\n                            board[dr][dc] = original;\r\n                            if (safe) score += 0.5; // prefer safe moves\r\n                            moves.push({ from: [r, c], to: [dr, dc], score });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (moves.length === 0) return;\r\n    moves.sort((a, b) => b.score - a.score);\r\n    const best = moves[0];\r\n    movePiece(best.from, best.to);\r\n    renderBoard();\r\n}\r\n\r\nfunction setMode(m) {\r\n    mode = m;\r\n    resetGame();\r\n}\r\n\r\nfunction resetGame() {\r\n    board = initialBoard();\r\n    selected = null;\r\n    turn = 'w';\r\n    gameOver = false;\r\n    renderBoard();\r\n    if (mode === 'ai' && turn === 'b') setTimeout(aiMove, 500);\r\n}\r\n\r\ndocument.getElementById('mode-human').onclick = () => setMode('human');\r\ndocument.getElementById('mode-ai').onclick = () => setMode('ai');\r\n\r\n// Start game\r\nmode = 'human';\r\nresetGame();"],"file":"chess.dev.js"}